<?php

namespace Proxy\__CG__\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ProjectSkill extends \Entity\ProjectSkill implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setIsOpen($isOpen)
    {
        $this->__load();
        return parent::setIsOpen($isOpen);
    }

    public function getIsOpen()
    {
        $this->__load();
        return parent::getIsOpen();
    }

    public function setRequiredFileList($requiredFileList)
    {
        $this->__load();
        return parent::setRequiredFileList($requiredFileList);
    }

    public function getRequiredFileList()
    {
        $this->__load();
        return parent::getRequiredFileList();
    }

    public function setPreSplit($preSplit)
    {
        $this->__load();
        return parent::setPreSplit($preSplit);
    }

    public function getPreSplit()
    {
        $this->__load();
        return parent::getPreSplit();
    }

    public function addAudition(\Entity\Audition $auditions)
    {
        $this->__load();
        return parent::addAudition($auditions);
    }

    public function removeAudition(\Entity\Audition $auditions)
    {
        $this->__load();
        return parent::removeAudition($auditions);
    }

    public function getAuditions()
    {
        $this->__load();
        return parent::getAuditions();
    }

    public function setProject(\Entity\Project $project = NULL)
    {
        $this->__load();
        return parent::setProject($project);
    }

    public function getProject()
    {
        $this->__load();
        return parent::getProject();
    }

    public function setSkill(\Entity\Skill $skill = NULL)
    {
        $this->__load();
        return parent::setSkill($skill);
    }

    public function getSkill()
    {
        $this->__load();
        return parent::getSkill();
    }

    public function setPerformer(\Entity\ProjectMember $performer = NULL)
    {
        $this->__load();
        return parent::setPerformer($performer);
    }

    public function getPerformer()
    {
        $this->__load();
        return parent::getPerformer();
    }

    public function addGenre(\Entity\Genre $genres)
    {
        $this->__load();
        return parent::addGenre($genres);
    }

    public function removeGenre(\Entity\Genre $genres)
    {
        $this->__load();
        return parent::removeGenre($genres);
    }

    public function getGenres()
    {
        $this->__load();
        return parent::getGenres();
    }

    public function addInfluence(\Entity\Influence $influences)
    {
        $this->__load();
        return parent::addInfluence($influences);
    }

    public function removeInfluence(\Entity\Influence $influences)
    {
        $this->__load();
        return parent::removeInfluence($influences);
    }

    public function getInfluences()
    {
        $this->__load();
        return parent::getInfluences();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'description', 'isOpen', 'requiredFileList', 'preSplit', 'auditions', 'project', 'skill', 'performer', 'genres', 'influences');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}